full list of new features in JDK9:
http://openjdk.java.net/projects/jdk9/
-----------------------------------------------
The list of major open source libraries that have been testing with Java 9:
https://wiki.openjdk.java.net/display/quality/Quality+Outreach

If you have a problem with a library, you should check whether there is an updated version of the library that supports Java 9.
-----------------------------------------------
JEP 223: New Version-String Scheme
Java version-string is a format that contains version specific information. This version-string consists of major, minor, security and patch update releases.
$MAJOR.$MINOR.$SECURITY.$PATCH  

$MAJOR: It increases when a major change occurs. Like Java 8 to Java 9. Each major release contains new features to the existing one.
$MINOR: These updates can be bug fixes, revision to standard API etc. if an update is released to Java 9, version-string format will be Java 9.1 (contains major and minor release number).
$SECURITY: Security updates can be critical fixes and security issues. If any security update is released to Java 9, the version-string format will be like: Java 9.1.5 (contains major, minor and security release number).
$PATCH: This version number increases for each security and high-priority customer fixes, which has been tested together. If a patch is released to Java 9, version-string format will be Java 9.1.5.1 (contains major, minor, security and patch release number).

Note: Each time the $PATCH version number is reset to zero if any $SECURITY, $MINOR, or $MAJOR version numbers are incremented.
Note: The $MINOR and $SECURITY version numbers are set to zero, if the $MAJOR version number is incremented. 
!!!However, when the $MINOR version number is incremented, the subsequent $SECURITY version number need not be set to zero.

java -version
9.0.1+11
Major version number 9
Minor version number 0
Security version number 1
Pre-released information Optional.empty
Build Number Optional[11]
-----------------------------------------------
Modular System â€“ Jigsaw Project

http://openjdk.java.net/projects/jigsaw/quick-start

modules:
http://cr.openjdk.java.net/~mr/jigsaw/ea/module-summary.html

tutorial:
https://www.logicbig.com/tutorials/core-java-tutorial/modules/quick-start.html
https://www.baeldung.com/java-9-modularity
-----------------------------------------------
JEP 269: Convenience Factory Methods for Collections
-----------------------------------------------
Stream Api Enhancements
iterate, takeWhile, dropWhile, ofNullable
-----------------------------------------------
Optional Class Enhancements
-----------------------------------------------
JEP 266: Concurrency Updates
-----------------------------------------------
JEP 213: Milling Project Coin
Try with resource enhancement
-----------------------------------------------
Interface changes
-----------------------------------------------
JEP 285: Spin-Wait Hints
https://ionutbalosin.com/2018/06/onspinwait-method-from-thread-class/
-----------------------------------------------
JEP 193: Variable Handles
-----------------------------------------------
JEP 102: Process API Updates 
-----------------------------------------------
JEP 248: Make G1 the Default Garbage Collector
Switching to a low-pause collector such as G1 should provide a better overall experience, for most users, 
than a throughput-oriented collector such as the Parallel GC, which is formerly the default.
-----------------------------------------------
JEP 158: Unified JVM Logging
-----------------------------------------------
JEP 222: jshell: The Java Shell (Read-Eval-Print Loop)
-----------------------------------------------
JEP 110: HTTP 2 Client
JEP 110 implements HTTP/2 and WebSocket.
This new HTTP client is included as an incubator module, and its goal is to replace the legacy HttpURLConnection API.
-----------------------------------------------

-----------------------------------------------

-----------------------------------------------

-----------------------------------------------


